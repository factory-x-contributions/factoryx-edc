[metadata]
format.version = "1.1"

[versions]
edc = "0.13.0"
assertj = "3.27.3"
jackson = "2.19.0"
jakarta-json = "2.0.1"
jupiter = "5.13.4"
opentelemetry = "2.16.0"
rsApi = "4.0.0"
titanium = "1.6.0"
swagger = "2.2.32"
tractusx = "0.10.0"
okhttp = "4.12.0"
httpMockServer = "5.15.0"
restAssured = "5.5.2"

[libraries]
edc-spi-catalog = { module = "org.eclipse.edc:catalog-spi", version.ref = "edc" }
edc-spi-transfer = { module = "org.eclipse.edc:transfer-spi", version.ref = "edc" }
edc-spi-controlplane = { module = "org.eclipse.edc:control-plane-spi", version.ref = "edc" }
edc-spi-dataplane = { module = "org.eclipse.edc:data-plane-spi", version.ref = "edc" }
edc-spi-core = { module = "org.eclipse.edc:core-spi", version.ref = "edc" }
edc-spi-policy = { module = "org.eclipse.edc:policy-spi", version.ref = "edc" }
edc-spi-contract = { module = "org.eclipse.edc:contract-spi", version.ref = "edc" }
edc-spi-participant = { module = "org.eclipse.edc:participant-spi", version.ref = "edc" }
edc-spi-policyengine = { module = "org.eclipse.edc:policy-engine-spi", version.ref = "edc" }
edc-spi-request-policy-context = { module = "org.eclipse.edc:request-policy-context-spi", version.ref = "edc" }
edc-spi-jsonld = { module = "org.eclipse.edc:json-ld-spi", version.ref = "edc" }
edc-spi-vc = { module = "org.eclipse.edc:verifiable-credentials-spi", version.ref = "edc" }
edc-spi-web = { module = "org.eclipse.edc:web-spi", version.ref = "edc" }
edc-spi-http = { module = "org.eclipse.edc:http-spi", version.ref = "edc" }
edc-spi-validator = { module = "org.eclipse.edc:validator-spi", version.ref = "edc" }
#edc-boot = { module = "org.eclipse.edc:boot", version.ref = "edc" }
edc-build-plugin = { module = "org.eclipse.edc.edc-build:org.eclipse.edc.edc-build.gradle.plugin", version.ref = "edc" }
#edc-core-controlplane = { module = "org.eclipse.edc:control-plane-core", version.ref = "edc" }
edc-junit = { module = "org.eclipse.edc:junit", version.ref = "edc" }
#edc-iam-mock = { module = "org.eclipse.edc:iam-mock", version.ref = "edc" }
edc-controlplane-contract = { module = "org.eclipse.edc:control-plane-contract", version.ref = "edc" }
edc-core-connector = { module = "org.eclipse.edc:connector-core", version.ref = "edc" }
edc-core-runtime = { module = "org.eclipse.edc:runtime-core", version.ref = "edc" }
edc-core-api = { module = "org.eclipse.edc:api-core", version.ref = "edc" }
edc-dataplane-core = { module = "org.eclipse.edc:data-plane-core", version.ref = "edc" }
edc-dataplane-http = { module = "org.eclipse.edc:data-plane-http", version.ref = "edc" }
edc-dataplane-util = { module = "org.eclipse.edc:data-plane-util", version.ref = "edc" }
edc-http-lib = { module = "org.eclipse.edc:http-lib", version.ref = "edc" }
mockserver-netty = { module = "org.mock-server:mockserver-netty", version.ref = "httpMockServer" }
restAssured = { module = "io.rest-assured:rest-assured", version.ref = "restAssured" }
edc-core-jersey = { module = "org.eclipse.edc:jersey-core", version.ref = "edc" }
swagger-annotations-jakarta = { module = "io.swagger.core.v3:swagger-annotations-jakarta", version.ref = "swagger" }
edc-validator-data-address-http-data = { module = "org.eclipse.edc:validator-data-address-http-data", version.ref = "edc" }

# EDC lib dependencies
edc-lib-json = { module = "org.eclipse.edc:json-lib", version.ref = "edc" }
edc-lib-validator = { module = "org.eclipse.edc:validator-lib", version.ref = "edc" }

# DCP Modules
edc-spi-identitytrust = { module = "org.eclipse.edc:identity-trust-spi", version.ref = "edc" }

# tractusx modules
eclipse-tractusx-coreutils = { module = "org.eclipse.tractusx.edc:core-utils", version.ref = "tractusx"}
eclipse-tractusx-spi-bpn-validation = { module = "org.eclipse.tractusx.edc:bpn-validation-spi", version.ref = "tractusx"}
eclipse-tractusx-spi-core = { module = "org.eclipse.tractusx.edc:core-spi", version.ref = "tractusx"}

#tractusx runtime modules
eclipse-tractusx-edc-controlplane-base = {module = "org.eclipse.tractusx.edc:edc-controlplane-base", version.ref = "tractusx"}
eclipse-tractusx-edc-dataplane-base = {module = "org.eclipse.tractusx.edc:edc-dataplane-base", version.ref = "tractusx"}
eclipse-tractusx-edc-runtime-memory = {module = "org.eclipse.tractusx.edc:edc-runtime-memory", version.ref = "tractusx"}
eclipse-tractusx-edc-controlplane-postgresql-hashicorp-vault = {module = "org.eclipse.tractusx.edc:edc-controlplane-postgresql-hashicorp-vault", version.ref = "tractusx"}
eclipse-tractusx-edc-dataplane-postgresql-vault = {module = "org.eclipse.tractusx.edc:edc-dataplane-hashicorp-vault", version.ref = "tractusx"}

# other deps
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
jacksonJsonP = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jakarta-jsonp", version.ref = "jackson" }
jakarta-rsApi = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version.ref = "rsApi" }
jakartaJson = { module = "org.glassfish:jakarta.json", version.ref = "jakarta-json" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jupiter" }
opentelemetry-javaagent = { module = "io.opentelemetry.javaagent:opentelemetry-javaagent", version.ref = "opentelemetry" }
titaniumJsonLd = { module = "com.apicatalog:titanium-json-ld", version.ref = "titanium" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

[plugins]
swagger = { id = "io.swagger.core.v3.swagger-gradle-plugin", version.ref = "swagger" }
shadow = { id = "com.gradleup.shadow", version = "8.3.6" }
