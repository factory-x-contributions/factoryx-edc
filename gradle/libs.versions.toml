[metadata]
format.version = "1.1"

[versions]
edc = "0.11.0"
assertj = "3.27.3"
awaitility = "4.2.2"
jackson = "2.18.2"
jakarta-json = "2.0.1"
jupiter = "5.11.4"
netty-mockserver = "5.15.0"
opentelemetry = "2.11.0"
restAssured = "5.5.0"
rsApi = "4.0.0"
testcontainers = "1.20.4"
titanium = "1.4.1"
tractusx = "0.9.0-rc1"

[libraries]
edc-spi-catalog = { module = "org.eclipse.edc:catalog-spi", version.ref = "edc" }
edc-spi-transfer = { module = "org.eclipse.edc:transfer-spi", version.ref = "edc" }
edc-spi-core = { module = "org.eclipse.edc:core-spi", version.ref = "edc" }
edc-spi-contract = { module = "org.eclipse.edc:contract-spi", version.ref = "edc" }
edc-spi-participant = { module = "org.eclipse.edc:participant-spi", version.ref = "edc" }
edc-spi-policyengine = { module = "org.eclipse.edc:policy-engine-spi", version.ref = "edc" }
edc-spi-request-policy-context = { module = "org.eclipse.edc:request-policy-context-spi", version.ref = "edc" }
edc-spi-http = { module = "org.eclipse.edc:http-spi", version.ref = "edc" }
edc-spi-jsonld = { module = "org.eclipse.edc:json-ld-spi", version.ref = "edc" }
edc-spi-identity-did = { module = "org.eclipse.edc:identity-did-spi", version.ref = "edc" }
edc-spi-vc = { module = "org.eclipse.edc:verifiable-credentials-spi", version.ref = "edc" }
edc-boot = { module = "org.eclipse.edc:boot", version.ref = "edc" }
edc-build-plugin = { module = "org.eclipse.edc.edc-build:org.eclipse.edc.edc-build.gradle.plugin", version.ref = "edc" }
edc-core-controlplane = { module = "org.eclipse.edc:control-plane-core", version.ref = "edc" }
edc-core-token = { module = "org.eclipse.edc:token-core", version.ref = "edc" }
edc-junit = { module = "org.eclipse.edc:junit", version.ref = "edc" }
edc-iam-mock = { module = "org.eclipse.edc:iam-mock", version.ref = "edc" }
edc-transaction-local = { module = "org.eclipse.edc:transaction-local", version.ref = "edc" }
edc-controlplane-contract = { module = "org.eclipse.edc:control-plane-contract", version.ref = "edc" }

# EDC lib dependencies
edc-lib-cryptocommon = { module = "org.eclipse.edc:crypto-common-lib", version.ref = "edc" }
edc-lib-json = { module = "org.eclipse.edc:json-lib", version.ref = "edc" }
edc-lib-token = { module = "org.eclipse.edc:token-lib", version.ref = "edc" }

# implementations
edc-sql-assetindex = { module = "org.eclipse.edc:asset-index-sql", version.ref = "edc" }
edc-sql-contract-definition = { module = "org.eclipse.edc:contract-definition-store-sql", version.ref = "edc" }
edc-sql-contract-negotiation = { module = "org.eclipse.edc:contract-negotiation-store-sql", version.ref = "edc" }
edc-sql-transferprocess = { module = "org.eclipse.edc:transfer-process-store-sql", version.ref = "edc" }
edc-sql-policydef = { module = "org.eclipse.edc:policy-definition-store-sql", version.ref = "edc" }
edc-sql-policy-monitor = { module = "org.eclipse.edc:policy-monitor-store-sql", version.ref = "edc" }
edc-sql-edrindex = { module = "org.eclipse.edc:edr-index-sql", version.ref = "edc" }

# DCP Modules
edc-spi-identitytrust = { module = "org.eclipse.edc:identity-trust-spi", version.ref = "edc" }

edc-identity-vc-jwt = { module = "org.eclipse.edc:jwt-verifiable-credentials", version.ref = "edc" }
edc-identity-trust-service = { module = "org.eclipse.edc:identity-trust-service", version.ref = "edc" }

# DCP for Testing

edc-identity-trust-sts-embedded = { module = "org.eclipse.edc:identity-trust-sts-embedded", version.ref = "edc" }
edc-identity-trust-sts-core = { module = "org.eclipse.edc:identity-trust-sts-core", version.ref = "edc" }
edc-identity-trust-sts-api = { module = "org.eclipse.edc:identity-trust-sts-api", version.ref = "edc" }
edc-identity-trust-sts-client-configuration = { module = "org.eclipse.edc:identity-trust-sts-client-configuration", version.ref = "edc" }
edc-sts-account-provisioner = { module = "org.eclipse.edc:sts-account-provisioner", version.ref = "edc" }

# Federated Catalog modules
edc-fc-sql-cache = { module = "org.eclipse.edc:federated-catalog-cache-sql", version.ref = "edc" }


# Data plane selector
edc-spi-dataplane-selector = { module = "org.eclipse.edc:data-plane-selector-spi", version.ref = "edc" }
edc-dpf-selector-core = { module = "org.eclipse.edc:data-plane-selector-core", version.ref = "edc" }
edc-data-plane-instance-store-sql = { module = "org.eclipse.edc:data-plane-instance-store-sql", version.ref = "edc" }

# DPF modules
edc-dpf-transfer-signaling = { module = "org.eclipse.edc:transfer-data-plane-signaling", version.ref = "edc" }

# micrometer and other infra stuff
edc-micrometer-core = { module = "org.eclipse.edc:micrometer-core", version.ref = "edc" }
edc-micrometer-jersey = { module = "org.eclipse.edc:jersey-micrometer", version.ref = "edc" }
edc-micrometer-jetty = { module = "org.eclipse.edc:jetty-micrometer", version.ref = "edc" }

# tractusx modules
eclipse-tractusx-coreutils = { module = "org.eclipse.tractusx.edc:core-utils", version.ref = "tractusx"}
eclipse-tractusx-spi-core = { module = "org.eclipse.tractusx.edc:core-spi", version.ref = "tractusx"}

#tractusx runtime modules
eclipse-tractusx-edc-controlplane-base = {module = "org.eclipse.tractusx.edc:edc-controlplane-base", version.ref = "tractusx"}
eclipse-tractusx-edc-dataplane-base = {module = "org.eclipse.tractusx.edc:edc-dataplane-base", version.ref = "tractusx"}
eclipse-tractusx-edc-runtime-memory = {module = "org.eclipse.tractusx.edc:edc-runtime-memory", version.ref = "tractusx"}
eclipse-tractusx-edc-controlplane-postgresql-hashicorp-vault = {module = "org.eclipse.tractusx.edc:edc-controlplane-postgresql-hashicorp-vault", version.ref = "tractusx"}
eclipse-tractusx-edc-dataplane-postgresql-vault = {module = "org.eclipse.tractusx.edc:edc-dataplane-hashicorp-vault", version.ref = "tractusx"}

# other deps
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
jacksonJsonP = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jakarta-jsonp", version.ref = "jackson" }
jakarta-rsApi = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version.ref = "rsApi" }
jakartaJson = { module = "org.glassfish:jakarta.json", version.ref = "jakarta-json" }
opentelemetry-javaagent = { module = "io.opentelemetry.javaagent:opentelemetry-javaagent", version.ref = "opentelemetry" }
netty-mockserver = { module = "org.mock-server:mockserver-netty", version.ref = "netty-mockserver" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
titaniumJsonLd = { module = "com.apicatalog:titanium-json-ld", version.ref = "titanium" }

[plugins]
swagger = { id = "io.swagger.core.v3.swagger-gradle-plugin", version = "2.2.24" }
