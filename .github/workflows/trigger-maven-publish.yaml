#################################################################################
#  Copyright (c) 2021,2023 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################


name: "Publish Maven Artifacts"

on:
  workflow_dispatch:
    inputs:
      version:
        required: false
        description: 'A semver string denoting the version. Append -SNAPSHOT for snapshots. If omitted, the version is taken from gradle.properties'

jobs:
  maven-release:
    name: 'Publish all artifacts'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  # Ensure this permission is set for GitHub Packages

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Import GPG Key
      - name: Import GPG Key
        uses: ./.github/actions/import-gpg-key
        with:
          gpg-private-key: ${{ secrets.ORG_GPG_PRIVATE_KEY }}  # Assuming the GPG key is stored as a secret

      # Publish version to GitHub Packages
      - name: Publish version to GitHub Packages
        env:
          GITHUB_PACKAGE_USERNAME: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_PACKAGE_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          echo "Input Version: ${{ inputs.version }}"

          # Check if version input was specified, else read from gradle.properties
          if [ -n "${{ inputs.version }}" ]; then
            VERSION="${{ inputs.version }}"
            echo "Publishing using version from parameter: $VERSION"
          else
            VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
            echo "Publishing using version from gradle.properties: $VERSION"
          fi

          echo "Publishing Version $VERSION to GitHub Packages"
          ./gradlew publish -Pversion=$VERSION
